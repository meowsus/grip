/*! Grip | MIT License | @colourgarden & @meowsus */

/*------------------------------------*\
    SETTINGS
\*------------------------------------*/

$grip-namespace:  'grid' !default;  // Prefix namespace for grid layout and cells
$grip-gutter:     20px !default;    // Gutter between grid cells

$grip-width-class-style:  'fraction' !default;  // Width class naming style. Can be 'fraction', 'percentage' or 'fragment'
$grip-widths: (
  2,
  3,
  4
) !default; // Width denominator values. 2 = 1/2, 3 = 1/3 etc. Add/remove as appropriate

$grip-enable-responsive:  true !default;
$grip-breakpoints:  (
  "thumb":            "screen and (max-width: 499px)",
  "handheld":         "screen and (min-width: 500px) and (max-width: 800px)",
  "handheld-and-up":  "screen and (min-width: 500px)",
  "pocket":           "screen and (max-width: 800px)",
  "lap":              "screen and (min-width: 801px) and (max-width: 1024px)",
  "lap-and-up":       "screen and (min-width: 801px)",
  "portable":         "screen and (max-width: 1024px)",
  "desk":             "screen and (min-width: 1025px)",
  "widescreen":       "screen and (min-width: 1160px)",
  "retina":           "screen and (-webkit-min-device-pixel-ratio: 2), screen and (min-resolution: 192dpi), screen and (min-resolution: 2dppx)"
) !default; // Responsive breakpoints. Add/remove as appropriate

// Enable/disable grid layouts
$grip-enable-grid-center:       false !default;
$grip-enable-grid-cell-center:  false !default;
$grip-enable-grid-right:        false !default;
$grip-enable-grid-middle:       false !default;
$grip-enable-grid-bottom:       false !default;
$grip-enable-grid-flush:        false !default;
$grip-enable-grid-tiny:         false !default;
$grip-enable-grid-small:        false !default;
$grip-enable-grid-large:        false !default;
$grip-enable-grid-huge:         false !default;
$grip-enable-grid-auto:         false !default;
$grip-enable-grid-rev:          false !default;





/*------------------------------------*\
    LOGIC aka THE MAGIC
\*------------------------------------*/

@function gripCreateClassName($style, $numerator, $denominator, $breakpoint-alias){

  $class-name: null;

  @if $style == 'fraction' or $style == 'fragment'{
    // Set delimiter as slash or text
    $delimiter: if($style == 'fraction', \/, -of-);
    $class-name: "grid__cell--#{$numerator}#{$delimiter}#{$denominator}#{$breakpoint-alias}";
  } @else{
    $class-width: floor(($numerator / $denominator) * 100);
    $class-name: "grid__cell--#{$class-width}#{$breakpoint-alias}";
  }

  @return $class-name;
}

@mixin grip-create-widths($widths, $breakpoint-alias: null){

  // Initialise an empty utility map that will eventually contain all our classes
  $pseudo-class-map: ();

  // Loop widths
  @each $denominator in $widths{

    // If 1=1, 2=2, 3=3; @for will skip over so create 1/1 class manually
    @if ($denominator == 1) {

      // Create 1/1 class
      $class-name: gripCreateClassName($grip-width-class-style, 1, 1, $breakpoint-alias);
      .#{$class-name}{
        width: 100%;
      }

    } @else {

      // Loop widths as fractions
      @for $numerator from 1 to $denominator{

        // Create class name and set width value
        $class-name: gripCreateClassName($grip-width-class-style, $numerator,$denominator, $breakpoint-alias);
        $width-value: percentage($numerator / $denominator);

        // Is this width already in our utility map?
        $duplicate: map-get($pseudo-class-map, $width-value);

        // Create width class
        .#{$class-name}{

          // If this width is in utility map, @extend the duplicate, else create a new one
          @if $duplicate{
            @extend .#{$duplicate};
          } @else{
            width: $width-value;
          }
        }

        // Add this class to utility map
        $add-class: ($width-value: $class-name);
        $pseudo-class-map: map-merge($pseudo-class-map, $add-class);
      }
    }
  }
}

@mixin av-mq($alias){

  // Search breakpoint map for alias
  $query: map-get($grip-breakpoints, $alias);

  // If alias exists, print out media query
  @if $query{
    @media #{$query}{
      @content;
    }
  } @else{
    @error "No breakpoint found for #{$alias}";
  }
}





/*------------------------------------*\
    GRID LAYOUT
\*------------------------------------*/

.#{$grip-namespace}{
  display: block;
  list-style: none;
  padding: 0;
  margin: 0;
  margin-left: -($grip-gutter);
  font-size: 0rem;
}

  .#{$grip-namespace}__cell{
    box-sizing: border-box;
    display: inline-block;
    width: 100%;
    padding: 0;
    padding-left: $grip-gutter;
    margin: 0;
    vertical-align: top;
    font-size: 1rem;
  }

@if $grip-enable-grid-center{

  .#{$grip-namespace}--center{
    text-align: center;

    > .#{$grip-namespace}__cell{
      text-align: left;
    }
  }
}

@if $grip-enable-grid-cell-center{

  .#{$grip-namespace}__cell--center{
    display: block;
    margin: 0 auto;
  }
}

@if $grip-enable-grid-right{

  .#{$grip-namespace}--right{
    text-align: right;

    > .#{$grip-namespace}__cell{
      text-align: left;
    }
  }
}

@if $grip-enable-grid-middle{

  .#{$grip-namespace}--middle{

    > .#{$grip-namespace}__cell{
      vertical-align: middle;
    }
  }
}

@if $grip-enable-grid-bottom{

  .#{$grip-namespace}--bottom{

    > .#{$grip-namespace}__cell{
      vertical-align: bottom;
    }
  }
}

@if $grip-enable-grid-flush{

  .#{$grip-namespace}--flush{
    margin-left: 0;

    > .#{$grip-namespace}__cell{
      padding-left: 0;
    }
  }
}

@if $grip-enable-grid-tiny{

  .#{$grip-namespace}--tiny{
    margin-left: -($grip-gutter / 4);

    > .#{$grip-namespace}__cell{
      padding-left: ($grip-gutter / 4);
    }
  }
}

@if $grip-enable-grid-small{

  .#{$grip-namespace}--small{
    margin-left: -($grip-gutter / 2);

    > .#{$grip-namespace}__cell{
      padding-left: ($grip-gutter / 2);
    }
  }
}

@if $grip-enable-grid-large{

  .#{$grip-namespace}--large{
    margin-left: -($grip-gutter * 2);

    > .#{$grip-namespace}__cell{
      padding-left: ($grip-gutter * 2);
    }
  }
}

@if $grip-enable-grid-huge{

  .#{$grip-namespace}--huge{
    margin-left: -($grip-gutter * 4);

    > .#{$grip-namespace}__cell{
      padding-left: ($grip-gutter * 4);
    }
  }
}

@if $grip-enable-grid-auto{

  .#{$grip-namespace}--auto{

    > .#{$grip-namespace}__cell{
      width: auto;
    }
  }
}

@if $grip-enable-grid-rev{

  .#{$grip-namespace}--rev{
    direction: rtl;

    > .#{$grip-namespace}__cell{
      direction: ltr;
    }
  }
}





/*------------------------------------*\
    GRID WIDTHS
\*------------------------------------*/

// Loop default widths
@include grip-create-widths($grip-widths);

// If responsive flag enabled, loop breakpoint widths
@if $grip-enable-responsive{

  @each $alias, $query in $grip-breakpoints{

    // Create each media query
    @media #{$query}{
      @include grip-create-widths($grip-widths, -for-#{$alias});
    }
  }
}
